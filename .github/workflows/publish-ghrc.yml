name: Docker Image CI for GHRC

env:
  BEFORE_SHA: ${{ github.event.before }}

on:
  push

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: read-all

    outputs:
      affected-apps: ${{ steps.apps.outputs.apps }}

    steps:
      - name: Print BEFORE_SHA Environment Variable
        run: echo "BEFORE_SHA=$BEFORE_SHA"
      - name: Print Environment Variable
        run: |
          printenv

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      # - uses: sonarsource/sonarqube-scan-action@master
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      - name: Setup Node 16
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      
      - uses: actions/cache@v3
        with:
          path: ~/.npm
          key: self-hosted-${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            self-hosted-${{ runner.os }}-node-

      - name: Download dependencies
        run: npm ci

      - name: Run tests
        run: npm run affected:test -- --ci --runInBand --base=$BEFORE_SHA --reporters=jest-junit --reporters=default --code-coverage

      - name: Merge coverage reports
        continue-on-error: true
        run: npm run merge-coverage
      
      - name: Upload lcov report
        uses: actions/upload-artifact@v3
        with:
          name: merged-lcov.info
          path: coverage/merged-lcov.info

      - name: Run build
        run: npm run affected:build -- --base=$BEFORE_SHA --configuration=deploy --subresource-integrity
        
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist
      
      - id: apps
        run: |
          AFFECTED_APPS=$(npm run --silent affected:apps -- --base=$BEFORE_SHA --plain)
          echo "apps=${AFFECTED_APPS}"
          echo "apps=${AFFECTED_APPS}" >> $GITHUB_OUTPUT

  bottom-side-ui-deploy:
    runs-on: ubuntu-latest
    needs: build
    if: contains(needs.build.outputs.affected-apps, 'bottom-side-ui')
    environment: deploy

    steps:
      - uses: actions/checkout@v3

      - name: Prepare deploy values
        id: prep
        run: |
          DOCKER_IMAGE=ghcr.io/valvoline-llc/vioc-central-ui
          VERSION_DATE=$(TZ=America/New_York date +"%Y%m%dT%H%M%S")
          APP_VERSION=${VERSION_DATE}-${GITHUB_SHA::5}
          TAGS="${DOCKER_IMAGE}:${APP_VERSION}"
          echo "appVersion=${APP_VERSION}" >> $GITHUB_OUTPUT
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT
      
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push to GitHub Packages
        uses: docker/build-push-action@v3
        with:
          context: apps/bottom-side-ui
          file: apps/bottom-side-ui/wizeline-side.dockerfile
          push: true
          tags: ${{ steps.prep.outputs.tags }}
          build-args: |
            APP_VERSION=${{ steps.prep.outputs.appVersion }}

      # - uses: actions/checkout@v3
      # - name: Build and push the image
      #   run: |
      #     docker login --username josue-r --password ${{ secrets.GH_PAT }} ghcr.io
      #     docker build . -f wizeline-side.dockerfile --tag ghcr.io/josue-r/hello-world-ghcr:latest
      #     docker push ghcr.io/josue-r/hello-world-ghcr:latest